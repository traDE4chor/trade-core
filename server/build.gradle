buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath('io.swagger:swagger-codegen:2.3.0')
    }
}

plugins {
    id 'java'
}

import io.swagger.codegen.config.CodegenConfigurator
import io.swagger.codegen.DefaultGenerator

def swaggerInput = file('swagger.yaml').absolutePath
def swaggerOutputDir = file('build/generated-sources/swagger')
task generateSources {
    inputs.file(swaggerInput)
    outputs.dir(swaggerOutputDir)
    doLast {
        def config = new CodegenConfigurator()
        config.setInputSpec(swaggerInput)
        config.setOutputDir(swaggerOutputDir.path)
        config.setLang('jaxrs')
        config.setAdditionalProperties([
                'invokerPackage'   : 'io.swagger.trade.server.jersey',
                'modelPackage'     : 'io.swagger.trade.server.jersey.model',
                'apiPackage'       : 'io.swagger.trade.server.jersey.api',
                'library'          : 'jersey2',
                'jackson'          : 'true',
                'serializableModel': 'true',
                'dateLibrary'      : 'java7',
                'templateDir'      : project.file('templates').absolutePath
        ])
        new DefaultGenerator().opts(config.toClientOptInput()).generate()
    }
}

// Copy the swagger.yaml file to the static swaggerui resources to make it accessible
task copySwaggerFile(type: Copy) {
    from project.file('swagger.yaml')
    into 'src/main/resources/swaggerui'
}

// Create a new source set for the generated API classes
sourceSets {
    main {
        java {
            srcDirs = ['src/main/java', "${project.buildDir.path}/generated-sources/swagger/src/gen/java"]
            exclude 'io/swagger/trade/server/jersey/api/JacksonJsonProvider.java'
        }
    }
}

compileJava {
    dependsOn generateSources, copySwaggerFile
}

ext {
    swagger_version = "1.5.15"
    jackson_version = "2.8.9"
    jersey_version = "2.22.2"
}

dependencies {
    compile project (':utils'), project(':dataManagement'), project(':notification')

    compile group: 'org.eclipse.jetty', name: 'jetty-server', version: '9.4.6.v20170531'
    compile group: 'org.eclipse.jetty', name: 'jetty-servlet', version: '9.4.6.v20170531'

//    compile group: 'org.eclipse.jetty', name: 'jetty-alpn-server', version: '9.4.6.v20170531'
//    compile group: 'org.eclipse.jetty.http2', name: 'http2-server', version: '9.4.6.v20170531'
//    runtime group: 'org.mortbay.jetty.alpn', name: 'alpn-boot', version: '8.1.10.v20161026'

    compile group: 'org.glassfish.jersey.core', name: 'jersey-server', version: "$jersey_version"
    compile group: 'org.glassfish.jersey.containers', name: 'jersey-container-servlet-core', version: "$jersey_version"
    compile group: 'org.glassfish.jersey.containers', name: 'jersey-container-jetty-http', version: "$jersey_version"
    compile group: 'org.glassfish.jersey.media', name: 'jersey-media-moxy', version: "$jersey_version"
    compile group: 'org.glassfish.jersey.media', name: 'jersey-media-json-jackson', version: "$jersey_version"
    compile group: 'com.fasterxml.jackson.jaxrs', name: 'jackson-jaxrs-json-provider', version: "$jackson_version"

    compile "com.fasterxml.jackson.datatype:jackson-datatype-joda:$jackson_version"
    compile "com.brsanthu:migbase64:2.2"

    compile group: 'javax.servlet', name: 'javax.servlet-api', version: '3.1.0'
    compile group: 'io.swagger', name: 'swagger-jersey2-jaxrs', version: "$swagger_version"
    compile "io.swagger:swagger-annotations:$swagger_version"
    compile "org.glassfish.jersey.media:jersey-media-multipart:$jersey_version"
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: "$jackson_version"
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: "$jackson_version"
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: "$jackson_version"
}